"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = require("@emotion/react");
const colors = __importStar(require("../../constants/colors"));
const breakpoints = __importStar(require("../../constants/breakpoints"));
exports.default = {
    gradient: react_1.css `
    background-image: linear-gradient(${colors.WHITE}, ${colors.GREY_100});
  `,
    dark: react_1.css `
    background-image: radial-gradient(
      circle at 50% 0,
      ${colors.GREY_700},
      ${colors.GREY_900}
    );
  `,
    gradientSide: react_1.css `
    background-image: linear-gradient(
      to right,
      ${colors.GREY_100},
      ${colors.WHITE},
      ${colors.GREY_100}
    );
  `,
    gradientCenter: react_1.css `
    background: linear-gradient(
      ${colors.WHITE},
      ${colors.GREY_100},
      ${colors.WHITE}
    );
  `,
    split: react_1.css `
    @media (min-width: ${breakpoints.MD}) {
      background: linear-gradient(
        to right,
        ${colors.GREY_900} 50%,
        ${colors.GREY_100} 50%
      );
    }
  `,
    reverseSplit: react_1.css `
    @media (min-width: ${breakpoints.MD}) {
      background: linear-gradient(
        to right,
        ${colors.GREY_100} 50%,
        ${colors.GREY_900} 50%
      );
    }
  `,
};
//# sourceMappingURL=Section.css.js.map