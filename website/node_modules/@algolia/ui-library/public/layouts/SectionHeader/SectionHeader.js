"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TEXT_ALIGNS = void 0;
/** @jsxRuntime classic /
/** @jsx jsx */
const react_1 = require("react");
const classnames_1 = __importDefault(require("classnames"));
const react_2 = require("@emotion/react");
const index_1 = require("../../index");
exports.TEXT_ALIGNS = {
    center: 'md:uil-ta-center',
    left: 'md:uil-ta-left',
    right: 'md:uil-ta-right',
};
const TagWrapper = ({ item }) => {
    if (!item)
        return null;
    const Tag = item.type || 'Text';
    if (Tag.displayName &&
        (Tag.displayName === 'Text' || Tag.displayName === 'UserGeneratedContent')) {
        return (react_2.jsx(Tag, Object.assign({}, item.props, { className: classnames_1.default(item.props.className, 'uil-mt-8 uil-mb-0 lg:uil-mt-12') })));
    }
    else {
        throw new Error("You can only use 'Text' or 'UserGeneratedContent' components.");
    }
};
const renderChildren = (children) => {
    if (typeof children === 'string') {
        return react_2.jsx(TagWrapper, { item: react_2.jsx(index_1.Text, null, children) });
    }
    return react_1.Children.map(children, item => (react_2.jsx(index_1.ErrorBoundary, null,
        react_2.jsx(TagWrapper, { item: item }))));
};
/**  This is the headline to be used on each `Section` that requires an introduction.
 *
 *  You can use this component to display a `Heading2`, or a `Heading2` plus some introduction text. Use it only once per `Section`.
 */
const SectionHeader = ({ align = 'center', children, label, labelProps = {}, noMarginBottom = false, title, titleProps = {}, ...other }) => {
    const { className: labelClassName, color: labelColor, tag: labelTag, ...otherLabelProps } = labelProps;
    const { className: titleClassName, ...otherTitleProps } = titleProps;
    const { className: otherClassName, ...otherProps } = other;
    return (react_2.jsx("header", Object.assign({}, otherProps, { className: classnames_1.default('uil-mh-auto md:uil-w-70p lg:uil-w-90p uil-ta-center', !noMarginBottom && 'uil-mb-48 lg:uil-mb-80', exports.TEXT_ALIGNS[align], otherClassName) }),
        label && (react_2.jsx(index_1.LabelText, Object.assign({}, otherLabelProps, { big: true, tag: labelTag || 'p', className: classnames_1.default('uil-mt-0 uil-mb-8', labelClassName), color: labelColor || 'blue' }), label)),
        react_2.jsx(index_1.Heading2, Object.assign({}, otherTitleProps, { className: classnames_1.default('uil-mv-0 uil-mh-auto', titleClassName) }), title),
        renderChildren(children)));
};
exports.default = SectionHeader;
//# sourceMappingURL=SectionHeader.js.map