"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importStar(require("react"));
const classnames_1 = __importDefault(require("classnames"));
const index_1 = require("../../index");
const BACKGROUND_COLORS = {
    blue: 'uil-bdc-nebula-500',
    green: 'uil-bdc-green-700',
    orange: 'uil-bdc-orange-600',
    pink: 'uil-bdc-pink-600',
    red: 'uil-bdc-red-600',
};
const Tabs = ({ boxShadow = 'normal', contentProps = {}, data, defaultTab, tabProps = {}, ...other }) => {
    const [activeTab, setActiveTab] = react_1.useState(defaultTab || data[0].label);
    const { className: tabClassName, ...otherTabProps } = tabProps;
    return (react_1.default.createElement("div", Object.assign({}, other),
        react_1.default.createElement("ul", { className: "uil-d-flex uil-mv-0 uil-lis-none uil-pl-0 uil-ta-center" }, data.map(({ label, color }) => {
            const labelColor = color || 'blue';
            return (react_1.default.createElement("li", { key: label, className: "uil-lis-none uil-fxg-1" },
                react_1.default.createElement(index_1.LabelText, Object.assign({}, otherTabProps, { key: label, className: classnames_1.default('uil-m-0 uil-p-12 uil-app-none uil-bdw-0 uil-cursor-pointer uil-bdts-solid uil-w-100p', activeTab.toLowerCase() === label.toLowerCase()
                        ? `uil-bgc-white ${boxShadow === 'normal' &&
                            'uil-bxs-default'} uil-bdtw-2 ${BACKGROUND_COLORS[labelColor]}`
                        : 'uil-bgc-transparent uil-bdbw-1 uil-bdbw-solid uil-bdc-transparent', tabClassName), tag: "button", disabled: label === activeTab, onClick: () => setActiveTab(label) }), label)));
        })),
        react_1.default.createElement("div", Object.assign({}, contentProps), data.map(({ label, children }) => {
            const active = label === activeTab;
            return (active &&
                children && react_1.default.createElement(index_1.ErrorBoundary, { key: label }, children));
        }))));
};
exports.default = Tabs;
//# sourceMappingURL=Tabs.js.map