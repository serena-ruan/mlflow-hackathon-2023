import React, { Children, Fragment } from 'react';
import cx from 'classnames';
import { ErrorBoundary } from '../../index';
const TagWrapper = ({ item, withLargerText, reverse, alternate, index, }) => {
    if (!item)
        return null;
    const Tag = item.type || 'div';
    if (Tag.displayName && Tag.displayName === 'Story') {
        return (React.createElement(Tag, Object.assign({}, item.props, { className: cx(item.props.className, index !== 0 && 'uil-mt-48 lg:uil-mt-120'), reverse: (alternate && !reverse && index % 2 !== 0) ||
                (alternate && reverse && index % 2 === 0) ||
                (!alternate && reverse), withLargerText: withLargerText || item.props.withLargerText })));
    }
    else {
        throw new Error("You can only use 'Story' components.");
    }
};
/** Components that are used to wrap several `Story` components together. */
const Stories = ({ alternate = true, children, reverse = false, withLargerText = false, }) => (React.createElement(Fragment, null, Children.map(children, (item, index) => (React.createElement(ErrorBoundary, null,
    React.createElement(TagWrapper, { item: item, withLargerText: withLargerText, reverse: reverse, alternate: alternate, index: index }))))));
export default Stories;
