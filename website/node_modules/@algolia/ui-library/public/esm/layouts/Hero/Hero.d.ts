/** @jsxRuntime classic /
/** @jsx jsx */
import { FunctionComponent } from 'react';
import { Heading1Props } from '../../components/Heading1/Heading1';
import { Heading3Props } from '../../components/Heading3/Heading3';
import { LabelTextProps } from '../../components/LabelText/LabelText';
import { XOR } from '../../constants/types';
export declare type BackgroundType = 'athleticFields' | 'bigCubes' | 'bubbles' | 'circles' | 'cloudLines' | 'cubes' | 'curves' | 'docsearch' | 'graph' | 'graphBlueLine' | 'intersections' | 'map' | 'orangeSquare' | 'orbInside' | 'orbit' | 'rectangles' | 'rectangles2' | 'rounds' | 'spirals' | 'spotlights' | 'triangles' | 'waves' | 'whirl';
export interface HeroBasicProps {
    /** The alignment of the component. When used with an image or video, will default align to left. */
    align?: 'left' | 'right';
    /** The background of the component */
    background?: BackgroundType;
    /** The cta of the component */
    cta?: JSX.Element | JSX.Element[];
    /** The text of the label above the title */
    label?: string | React.ReactNode;
    /** An object containing LabelText properties. See LabelText for more details */
    labelProps?: LabelTextProps;
    /** The vertical padding of the component */
    padding?: 'small' | 'normal';
    /** Adds a subtitle to the component */
    subtitle?: React.ReactNode;
    /** An object containing Heading3 properties. See Heading3 for more details */
    subtitleProps?: Heading3Props;
    /** The title of the component (Heading1) */
    title: React.ReactNode;
    /** An object containing Heading1 properties. See Heading1 for more details */
    titleProps?: Heading1Props;
    [key: string]: any;
}
interface HeroWithVideo {
    /** Embedded video inside a modal. The video will autoplay when modal opens. */
    videoInModal?: boolean;
    /** Video poster image, required when using the video prop */
    poster?: string;
    /** Adds a video next to the Hero */
    video?: string;
    /** An object containing video properties */
    videoProps?: React.VideoHTMLAttributes<HTMLVideoElement>;
}
interface HeroWithImage {
    /** Adds a image next to the Hero */
    image?: string;
    /** An object containing image properties */
    imageProps?: React.ImgHTMLAttributes<HTMLImageElement>;
}
export declare type HeroProps = HeroBasicProps & XOR<HeroWithVideo, HeroWithImage>;
/** `Hero` component is considered as the main header of the page. It can contain a couple of `Buttons`, a background, a `Heading1`, a `Heading3` and an optional image. */
declare const Hero: FunctionComponent<HeroProps>;
export default Hero;
