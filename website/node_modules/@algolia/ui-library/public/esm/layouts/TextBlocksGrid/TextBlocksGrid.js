/** @jsxRuntime classic /
/** @jsx jsx */
import { Children } from 'react';
import cx from 'classnames';
import { jsx } from '@emotion/react';
import { ErrorBoundary } from '../../index';
import styles from './TextBlocksGrid.css';
import * as colors from '../../constants/colors';
const BACKGROUND_COLORS = {
    black: 'uil-bgc-grey-900',
    dark: 'uil-bgc-grey-800',
    'light-grey': 'uil-bgc-grey-100',
    white: 'uil-bgc-white',
};
const SHADOW_COLORS = {
    black: colors.GREY_900,
    dark: colors.GREY_800,
    'light-grey': colors.GREY_100,
    white: colors.WHITE,
};
const GRID_COLORS = {
    grey: 'uil-bgc-grey-200',
    white: 'uil-bgc-white',
};
const TextWrapper = ({ item, numbered }) => {
    if (!item)
        return null;
    if (item.type && item.type.displayName === 'TextBlock') {
        const CustomTag = item.type;
        return (jsx("li", { css: numbered && styles.item, className: cx('uil-lis-none', numbered &&
                'uil-pos-relative uil-pt-32 uil-pl-24 lg:uil-pl-32 lg:uil-pt-48') },
            jsx(CustomTag, Object.assign({}, item.props, { className: cx('uil-h-100p', item.props.className) }))));
    }
    throw new Error("You can only use 'TextBlock' component.");
};
const TextBlocksGrid = ({ children, columnsPerRow = 3, hasVisibleGrid, gridColor = 'grey', gridBackground = 'white', numbered = false, ...other }) => (jsx("div", Object.assign({}, other),
    jsx("ul", { className: cx('uil-pos-relative uil-d-grid uil-m-0 uil-p-0', columnsPerRow === 2 && 'md:uil-g-2', columnsPerRow === 3 && 'md:uil-g-3', hasVisibleGrid ? GRID_COLORS[gridColor] : 'uil-ggap-48 lg:uil-ggap-80'), css: [numbered && styles.root, hasVisibleGrid && styles.gridGap] },
        hasVisibleGrid && (jsx("div", { css: styles.boxShadow(SHADOW_COLORS[gridBackground]), className: "uil-pos-absolute uil-left-0 uil-top-0 uil-right-0 uil-bot-0" })),
        Children.map(children, (item, index) => (jsx(ErrorBoundary, null, hasVisibleGrid ? (jsx("div", { key: index, className: cx('uil-pos-relative md:uil-ph-48 md:uil-pb-24 md:uil-pt-24 lg:uil-ph-48 lg:uil-pb-48 lg:uil-pt-48', index > 0 && 'uil-pt-24', index < Children.count(children) - 1 && 'uil-pb-24', hasVisibleGrid && BACKGROUND_COLORS[gridBackground]) },
            jsx(TextWrapper, { item: item, numbered: numbered }))) : (jsx(TextWrapper, { item: item, numbered: numbered }))))))));
export default TextBlocksGrid;
