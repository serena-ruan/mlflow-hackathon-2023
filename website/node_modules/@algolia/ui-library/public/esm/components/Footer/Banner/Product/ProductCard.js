/** @jsxRuntime classic /
/** @jsx jsx */
import { jsx } from '@emotion/react';
import { Fragment } from 'react';
import * as routes from '../../../../constants/routes';
import LightCta from '../../../LightCta';
import Card from '../../../Card';
import Text from '../../../Text';
import styles from '../Banner.css';
import CLOUDINARY from '../../../../constants/cloudinary';
import { isInternalLink } from '../../../../helpers';
const PRODUCT_SECTIONS = {
    search: {
        logo: (jsx("img", { src: `${CLOUDINARY}/footer/algolia-search-dark-bg.png`, width: 156, height: 57, alt: "Algolia Search logo" })),
        description: 'Powerful, hosted search API to create fast and relevant search & discovery.',
        url: routes.HOSTED_SEARCH_API,
    },
    recommend: {
        logo: (jsx("img", { src: `${CLOUDINARY}/footer/algolia-recommend-dark-bg.png`, width: 203, height: 57, alt: "Algolia Recommend logo" })),
        description: 'Flexible, hosted recommendation API with advanced programmatic control.',
        url: routes.RECOMMENDATIONS,
    },
};
const ProductCard = ({ internalLinkTag, externalRoutes, withUrlPrefix, }) => {
    const productsToDisplay = Object.keys(PRODUCT_SECTIONS);
    const Link = ({ to, ...other }) => {
        const Tag = internalLinkTag || 'a';
        const isInternal = internalLinkTag !== 'a' &&
            !withUrlPrefix &&
            isInternalLink(to, externalRoutes);
        return isInternal ? jsx(Tag, Object.assign({ to: to }, other)) : jsx("a", Object.assign({ href: to }, other));
    };
    return (jsx(Card, { css: styles.card, className: "uil-w-100p uil-pv-40 uil-ph-32 uil-d-flex uil-fxd-column uil-jc-center uil-pos-relative md:uil-fxd-row md:uil-ph-110", borderRadius: 4 }, productsToDisplay.map((sectionType, index) => {
        const { logo, description, url } = PRODUCT_SECTIONS[sectionType];
        const isLastSection = index === productsToDisplay.length - 1;
        return (jsx(Fragment, { key: sectionType },
            jsx(Link, { to: url, className: "uil-td-none uil-ta-center md:uil-ta-left", internalLinkTag: internalLinkTag },
                jsx("span", { className: "uil-d-block" }, logo),
                jsx(Text, { className: "uil-d-none uil-mt-24 uil-mb-0 sm:uil-d-block", color: "white" }, description),
                jsx(LightCta, { tag: "span", color: "white", className: "uil-mt-24" },
                    jsx("span", { className: "uil-tt-upper uil-lsp-big uil-fw-semibold uil-fsz-14" }, "Learn more"))),
            !isLastSection && (jsx("hr", { className: "uil-bgc-grey-500 uil-w-100p uil-h-1 uil-bdw-0 uil-mv-24 md:uil-h-auto md:uil-w-1 md:uil-mh-90 md:uil-mv-0" }))));
    })));
};
export default ProductCard;
