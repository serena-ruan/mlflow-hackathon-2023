/** @jsxRuntime classic /
/** @jsx jsx */
import { jsx } from '@emotion/react';
import cx from 'classnames';
import Banner from './Banner';
import BottomSection from './BottomSection';
import LinkSections from './LinkSections';
import RecommendedLinksSection from './RecommendedLinks/';
const Footer = ({ externalRoutes = [
    'dashboard',
    'doc',
    'ebook',
    'event',
    'lp',
    'pdfs',
    'study',
    'support',
    'thank-you',
    'users',
    'webinar',
], hasBanner = true, internalLinkTag = 'a', type = 'default', recommendedLinks, ctaProps, trackEvent, withUrlPrefix = false, className, ...other }) => {
    const displaySeparator = Boolean(recommendedLinks);
    return (jsx("footer", Object.assign({ className: cx('uil-bgc-grey-800', className) }, other),
        hasBanner ? (jsx(Banner, { type: type, internalLinkTag: internalLinkTag, externalRoutes: externalRoutes, ctaProps: ctaProps, trackEvent: trackEvent, withUrlPrefix: withUrlPrefix })) : null,
        recommendedLinks && jsx(RecommendedLinksSection, { data: recommendedLinks }),
        jsx("div", { className: "uil-ph-32 sm:uil-ph-62" },
            jsx("div", { className: cx('uil-d-grid uil-ghgap-48 uil-gvgap-40 uil-g-2 uil-pb-32 uil-pt-48 sm:uil-gvgap-80 sm:uil-maw-1440 sm:uil-m-auto sm:uil-d-flex sm:uil-jc-center sm:uil-pb-62', { 'uil-bdc-grey-600 uil-bdtw-1 uil-bdts-solid': displaySeparator }) },
                jsx(LinkSections, { externalRoutes: externalRoutes, internalLinkTag: internalLinkTag, withUrlPrefix: withUrlPrefix })),
            jsx(BottomSection, { externalRoutes: externalRoutes, internalLinkTag: internalLinkTag, withUrlPrefix: withUrlPrefix }))));
};
export default Footer;
