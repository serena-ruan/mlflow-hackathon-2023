import { css } from '@emotion/react';
import CLOUDINARY from '../../constants/cloudinary';
import * as breakpoints from '../../constants/breakpoints';
import * as colors from '../../constants/colors';
export default {
    desktopNavShadow: (theme) => {
        const boxShadowColor = theme === 'dark' ? 'rgb(0 0 0 / 2.5%)' : 'rgb(55 58 80 / 5%)';
        return css `
      box-shadow: 0px 16px 32px ${boxShadowColor},
        0px 8px 16px ${boxShadowColor}, 0px 4px 8px ${boxShadowColor},
        0px 2px 4px ${boxShadowColor}, 0px 1px 2px ${boxShadowColor};
    `;
    },
    desktopNavLinkBefore: (isCurrent, theme) => css `
    &:before {
      content: attr(data-title);
      position: absolute;
      text-align: center;
      margin: auto;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      font-family: Poppins, Arial, sans-serif;
      font-weight: 600;
      letter-spacing: normal;
      white-space: nowrap;
      color: ${theme === 'light' ? colors.GREY_900 : colors.WHITE};
      z-index: 2;
      display: ${isCurrent ? 'block' : 'none'};
      pointer-events: none;
      font-size: 16px;

      @media (min-width: ${breakpoints.LG}) {
        transform: translate(-50%, calc(-50% - 1px));
      }
    }
  `,
    subNavLinks: css `
    &:before,
    &:after {
      content: '';
      position: fixed;
      left: 0;
      right: 0;
      height: 24px;
      pointer-events: none;
      @media (min-width: ${breakpoints.MD}) {
        display: none;
      }
    }
    &:before {
      background-image: linear-gradient(
        rgb(255 255 255 / 100%),
        rgb(255 255 255 / 0%)
      );
    }
    &:after {
      bottom: 70px;
      background-image: linear-gradient(
        to top,
        rgb(255 255 255 / 100%),
        rgb(255 255 255 / 0%)
      );
    }
  `,
    subNavItem: css `
    transition: opacity 0.2s ease-out, transform 0.2s ease-out;
    @media (min-width: ${breakpoints.MD}) {
      transform: translateY(-10px);
      margin-right: 16px;
      &:hover,
      &:focus {
        transform: translateY(0);
      }
    }
  `,
    subNavItemProducts: css `
    @media (min-width: ${breakpoints.MD}) {
      width: auto;
    }
  `,
    subNavItemFocused: css `
    @media (min-width: ${breakpoints.MD}) {
      transform: translateY(0);
    }
  `,
    subNavBannerBackground: css `
    @media (min-width: ${breakpoints.MD}) {
      background-image: url('${CLOUDINARY}/nav/search-inspiration-banner.png');
      background-position: 125%
    }
  `,
    subNavBannerLink: (theme, backgroundImage) => theme === 'dark'
        ? css `
          background-image: radial-gradient(100% 100% at 100% 0%, ${colors.GREY_700} 0%, ${colors.GREY_900} 100%);
          @media (min-width: ${breakpoints.MD}) {
            background-image: url('${CLOUDINARY}${backgroundImage}'),
              radial-gradient(100% 100% at 100% 0%, ${colors.GREY_700} 0%, ${colors.GREY_900} 100%)
          }
        `
        : css `
          @media (min-width: ${breakpoints.MD}) {
            background-image: url('${CLOUDINARY}${backgroundImage}')
          }
      `,
    navSearch: css `
    height: 48px;
  `,
    navSearchTranslucide: css `
    background-color: rgb(72 76 122 / 50%);
  `,
    navSearchIcon: css `
    top: -2px;
  `,
    navMobileSearchIcon: css `
    top: -2px;
    transition: none !important;
  `,
    secondaryNav: (theme, hasGradient) => {
        const boxShadowColor = theme === 'dark' ? 'rgb(0 0 0 / 2.5%)' : 'rgb(55 58 80 / 5%)';
        const backgroundColor = (opacity) => {
            return theme === 'dark'
                ? `rgb(35 38 59 / ${opacity})`
                : `rgb(245 245 250 / ${opacity})`;
        };
        return css `
      transition: none !important;
      box-shadow: 0px 16px 32px ${boxShadowColor},
        0px 8px 16px ${boxShadowColor}, 0px 4px 8px ${boxShadowColor},
        0px 2px 4px ${boxShadowColor}, 0px 1px 2px ${boxShadowColor};
      background: ${backgroundColor('97%')};

      @supports (backdrop-filter: blur(5px)) {
        backdrop-filter: blur(5px);
        background: ${backgroundColor('85%')};
      }

      ${hasGradient &&
            css `
          &::before,
          &::after {
            content: '';
            display: block;
            position: absolute;
            top: 0;
            left: 0;
            width: 16px;
            height: 100%;
            background: linear-gradient(
              to right,
              ${theme === 'dark' ? colors.GREY_900 : colors.GREY_100},
              rgb(0 0 0 / 0)
            );
            z-index: 3;
          }
          :after {
            width: 100px;
            left: calc(100vw - 100px) !important;
            background: linear-gradient(
              to left,
              ${theme === 'dark' ? colors.GREY_900 : colors.GREY_100},
              ${theme === 'dark' ? colors.GREY_900 : colors.GREY_100},
              rgba(0 0 0 / 0)
            );
          }
        `}
    `;
    },
    secondaryNavInner: css `
    max-width: calc(${breakpoints.XL} + 40px);
    -webkit-overflow-scrolling: touch;
    -ms-overflow-style: -ms-autohiding-scrollbar;
  `,
};
