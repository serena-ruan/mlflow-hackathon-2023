/** @jsxRuntime classic /
/** @jsx jsx */
import { useEffect, useRef } from 'react';
import cx from 'classnames';
import { jsx } from '@emotion/react';
import { Menu, Search, X } from 'react-feather';
import { LabelText, Button } from '../../index';
import styles from './Nav.css';
import * as routes from '../../constants/routes';
import { isBrowser, removeOverflowHiddenBody } from '../../helpers';
import AlgoliaLogoSmall from '../../logos/AlgoliaLogoSmall';
const renderMenuIcon = (Tag, theme) => (jsx(Tag, { "aria-hidden": true, className: cx('uil-w-20 uil-h-20 uil-d-block', theme === 'light' ? 'uil-color-solstice' : 'uil-color-white') }));
const NavMobile = ({ internalLinkTag, Link, mobileOpen, setMobileOpen, setMobileNavTopPosition, onLogoContextMenu, theme, hasSecondaryNav, }) => {
    const ref = useRef(null);
    useEffect(() => {
        if (isBrowser) {
            const events = ['click', 'load', 'resize', 'scroll'];
            const updateScrollPosition = () => {
                window.requestAnimationFrame(() => {
                    if (ref.current)
                        setMobileNavTopPosition(ref.current.getBoundingClientRect().top +
                            ref.current.getBoundingClientRect().height);
                });
            };
            updateScrollPosition();
            events.map(event => window.addEventListener(event, () => updateScrollPosition()));
            return () => {
                events.map(event => window.removeEventListener(event, () => updateScrollPosition()));
            };
        }
        return () => { };
    }, []);
    return (jsx("div", { className: cx('uil-h-60 uil-pos-sticky uil-z-5 uil-top-0 uil-d-flex uil-jc-between uil-ai-center uil-p-12 md:uil-d-none', theme === 'light'
            ? 'uil-bgc-white uil-bdc-grey-200'
            : 'uil-bgc-grey-900 uil-bdc-grey-800', hasSecondaryNav
            ? 'uil-bdw-0 uil-bdbw-1 uil-bdbs-solid'
            : 'uil-bxs-default'), "data-uil-nav-mobile": true, ref: ref },
        jsx("div", { className: "uil-d-flex uil-ai-center" },
            jsx(Link, { to: routes.HOME, onClick: () => removeOverflowHiddenBody() },
                jsx(AlgoliaLogoSmall, { className: "uil-w-34 uil-h-34 uil-d-block", onContextMenu: onLogoContextMenu })),
            jsx("button", { className: "uil-app-none uil-bdw-0 uil-bgc-transparent uil-p-0 uil-ml-8 uil-d-flex uil-ai-center", "data-uil-nav-mobile-menu-button": true, onClick: () => {
                    if (isBrowser) {
                        const body = document.querySelector('body');
                        if (body) {
                            if (mobileOpen) {
                                body.classList.remove('uil-ov-hidden');
                            }
                            else {
                                body.classList.add('uil-ov-hidden');
                            }
                            setMobileOpen(!mobileOpen);
                        }
                    }
                } },
                mobileOpen ? renderMenuIcon(X, theme) : renderMenuIcon(Menu, theme),
                jsx(LabelText, { className: "uil-ml-8", color: theme === 'light' ? 'grey' : 'white' }, mobileOpen ? 'Close' : 'Menu'))),
        jsx(Button, { "aria-label": "Go to search", className: "uil-w-40 uil-h-40", background: "blue", color: "white", tag: internalLinkTag || 'a', to: internalLinkTag ? routes.SEARCH : null, href: !internalLinkTag ? routes.SEARCH : null, onClick: () => removeOverflowHiddenBody() },
            jsx(Search, { "aria-hidden": true, className: "uil-w-20 uil-h-20 uil-pos-relative uil-d-flex uil-va-middle", css: styles.navMobileSearchIcon }))));
};
export default NavMobile;
