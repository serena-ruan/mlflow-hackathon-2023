/** @jsxRuntime classic /
/** @jsx jsx */
import cx from 'classnames';
import { jsx } from '@emotion/react';
import { isInternalLink, removeOverflowHiddenBody } from '../../helpers';
const NavLink = ({ children, className, externalRoutes = [], internalLinkTag, to, trackedEvents, trackEvent, withUrlPrefix, ...other }) => {
    const isInternal = internalLinkTag !== 'a' &&
        !withUrlPrefix &&
        isInternalLink(to, externalRoutes);
    const Tag = internalLinkTag;
    const Link = ({ tag, ...other }) => {
        const LinkTag = tag;
        const { onClick: otherOnClick, ...otherProps } = other; // If parent component passes its own onClick prop, destructure and call it in the LinkTag onClick
        return (jsx(LinkTag, Object.assign({}, otherProps, { className: cx('uil-td-none', className), "data-uil-nav-internal-link": isInternal, onClick: (e) => {
                removeOverflowHiddenBody();
                if (trackedEvents) {
                    const innerText = e.target.innerText;
                    if (innerText) {
                        const title = trackedEvents[innerText.toLowerCase()];
                        if (trackEvent && title)
                            trackEvent(...title);
                    }
                }
                if (otherOnClick)
                    otherOnClick();
            } }), children));
    };
    const isUrlPrefixable = (url) => url.charAt(0) === '/';
    return isInternal ? (jsx(Link, Object.assign({}, other, { to: to, tag: Tag }))) : (jsx(Link, Object.assign({}, other, { href: `${withUrlPrefix && isUrlPrefixable(to) ? 'https://www.algolia.com' : ''}${to}`, tag: "a" })));
};
export default NavLink;
