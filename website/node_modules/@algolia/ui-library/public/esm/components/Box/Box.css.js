import { css } from '@emotion/react';
import * as breakpoints from '../../constants/breakpoints';
import * as colors from '../../constants/colors';
export default {
    root: css `
    perspective: 900px;
  `,
    book: css `
    /* Setup variables 
    * Mobile first approach, override these
    * at the end in a media query
    */
    --rotation: 18deg;
    --scale: 0.8;
    --width: 200px;
    --height: 300px;
    --fontSize: 1.1em;
    --coverBackground: 255 255 255;
    --titleColor: ${colors.GREY_800};
    --fourthBackground: ${colors.GREY_300};

    width: var(--width);
    height: var(--height);
    transform: rotate3d(0, 1, 0, var(--rotation)) translateZ(-50px)
      scale(var(--scale));
    transform-origin: center center;
    transition: transform 0.2s ease;
    transform-style: preserve-3d;
    will-change: transform;

    &:hover {
      --rotation: 30deg;
      --fourthBackground: ${colors.GREY_100};
    }

    &:active {
      --rotation: 20deg;
      --scale: 0.78;
      --fourthBackground: ${colors.GREY_100};
    }

    /* Shadow */
    &:before {
      content: '';
      display: block;
      position: absolute;
      bottom: 0;
      left: -60px;
      height: 60px;
      width: 100%;
      background: rgb(35 38 59 / 24%);
      border-radius: 0;
      filter: blur(40px);
      z-index: -1;
      /* enable hardware acceleration to avoid visual glitches */
      transform: translate3d(-34px, 0, -40px);
    }

    /* Fourth of Cover*/
    &:after {
      content: '';
      display: block;
      height: var(--height);
      width: 60px;
      background: var(--fourthBackground);
      transform: rotateY(-90deg) translateZ(30px);
      transition: background-color 0.2s ease;
      will-change: background-color;
    }

    @media (min-width: ${breakpoints.MD}) {
      --width: 300px;
      --height: 400px;
      --scale: 1;
      --fontSize: 1.6em;

      &:active {
        --scale: 0.95;
      }
    }
  `,
    cover: css `
    background: linear-gradient(to top, #e9e9f3 0%, #ffffff 100%);
    transform: translateZ(30px);

    &:before {
      content: '';
      display: block;
      position: absolute;
      width: 100%;
      height: 100%;
      background: linear-gradient(
        to top,
        rgb(var(--coverBackground)),
        rgb(var(--coverBackground) / 80%),
        rgb(var(--coverBackground) / 60%),
        rgb(var(--coverBackground) / 0%),
        rgb(var(--coverBackground) / 0%)
      );
      z-index: 1;
    }
  `,
    coverIcon: css `
    width: calc(100% - 64px);
    height: 66%;
    justify-items: flex-end;
  `,
    coverTitle: css `
    width: calc(100% - 64px);
    height: 33%;
    font-size: var(--fontSize);
    color: var(--titleColor);
    backface-visibility: hidden;
    hyphens: auto;
  `,
    icon: (url) => css `
    width: 64px;
    height: 64px;
    transform: translateY(-16px);
    background-image: url(${url});
  `,
    pattern: (url) => css `
    background-position: center top;
    background-size: 200%;
    background-image: url(${url});
  `,
};
