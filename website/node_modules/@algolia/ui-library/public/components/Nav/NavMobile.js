"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/** @jsxRuntime classic /
/** @jsx jsx */
const react_1 = require("react");
const classnames_1 = __importDefault(require("classnames"));
const react_2 = require("@emotion/react");
const react_feather_1 = require("react-feather");
const index_1 = require("../../index");
const Nav_css_1 = __importDefault(require("./Nav.css"));
const routes = __importStar(require("../../constants/routes"));
const helpers_1 = require("../../helpers");
const AlgoliaLogoSmall_1 = __importDefault(require("../../logos/AlgoliaLogoSmall"));
const renderMenuIcon = (Tag, theme) => (react_2.jsx(Tag, { "aria-hidden": true, className: classnames_1.default('uil-w-20 uil-h-20 uil-d-block', theme === 'light' ? 'uil-color-solstice' : 'uil-color-white') }));
const NavMobile = ({ internalLinkTag, Link, mobileOpen, setMobileOpen, setMobileNavTopPosition, onLogoContextMenu, theme, hasSecondaryNav, }) => {
    const ref = react_1.useRef(null);
    react_1.useEffect(() => {
        if (helpers_1.isBrowser) {
            const events = ['click', 'load', 'resize', 'scroll'];
            const updateScrollPosition = () => {
                window.requestAnimationFrame(() => {
                    if (ref.current)
                        setMobileNavTopPosition(ref.current.getBoundingClientRect().top +
                            ref.current.getBoundingClientRect().height);
                });
            };
            updateScrollPosition();
            events.map(event => window.addEventListener(event, () => updateScrollPosition()));
            return () => {
                events.map(event => window.removeEventListener(event, () => updateScrollPosition()));
            };
        }
        return () => { };
    }, []);
    return (react_2.jsx("div", { className: classnames_1.default('uil-h-60 uil-pos-sticky uil-z-5 uil-top-0 uil-d-flex uil-jc-between uil-ai-center uil-p-12 md:uil-d-none', theme === 'light'
            ? 'uil-bgc-white uil-bdc-grey-200'
            : 'uil-bgc-grey-900 uil-bdc-grey-800', hasSecondaryNav
            ? 'uil-bdw-0 uil-bdbw-1 uil-bdbs-solid'
            : 'uil-bxs-default'), "data-uil-nav-mobile": true, ref: ref },
        react_2.jsx("div", { className: "uil-d-flex uil-ai-center" },
            react_2.jsx(Link, { to: routes.HOME, onClick: () => helpers_1.removeOverflowHiddenBody() },
                react_2.jsx(AlgoliaLogoSmall_1.default, { className: "uil-w-34 uil-h-34 uil-d-block", onContextMenu: onLogoContextMenu })),
            react_2.jsx("button", { className: "uil-app-none uil-bdw-0 uil-bgc-transparent uil-p-0 uil-ml-8 uil-d-flex uil-ai-center", "data-uil-nav-mobile-menu-button": true, onClick: () => {
                    if (helpers_1.isBrowser) {
                        const body = document.querySelector('body');
                        if (body) {
                            if (mobileOpen) {
                                body.classList.remove('uil-ov-hidden');
                            }
                            else {
                                body.classList.add('uil-ov-hidden');
                            }
                            setMobileOpen(!mobileOpen);
                        }
                    }
                } },
                mobileOpen ? renderMenuIcon(react_feather_1.X, theme) : renderMenuIcon(react_feather_1.Menu, theme),
                react_2.jsx(index_1.LabelText, { className: "uil-ml-8", color: theme === 'light' ? 'grey' : 'white' }, mobileOpen ? 'Close' : 'Menu'))),
        react_2.jsx(index_1.Button, { "aria-label": "Go to search", className: "uil-w-40 uil-h-40", background: "blue", color: "white", tag: internalLinkTag || 'a', to: internalLinkTag ? routes.SEARCH : null, href: !internalLinkTag ? routes.SEARCH : null, onClick: () => helpers_1.removeOverflowHiddenBody() },
            react_2.jsx(react_feather_1.Search, { "aria-hidden": true, className: "uil-w-20 uil-h-20 uil-pos-relative uil-d-flex uil-va-middle", css: Nav_css_1.default.navMobileSearchIcon }))));
};
exports.default = NavMobile;
//# sourceMappingURL=NavMobile.js.map