"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/** @jsxRuntime classic /
/** @jsx jsx */
const react_1 = require("react");
const classnames_1 = __importDefault(require("classnames"));
const react_2 = require("@emotion/react");
const react_feather_1 = require("react-feather");
const index_1 = require("../../index");
const NavLink_1 = __importDefault(require("./NavLink"));
const Nav_css_1 = __importDefault(require("./Nav.css"));
const helpers_1 = require("../../helpers");
const InnerLink = ({ theme, link }) => (react_2.jsx("span", { className: classnames_1.default('uil-fsz-16 uil-ff-poppins', theme === 'dark'
        ? 'uil-color-grey-300 hover:uil-color-grey-100'
        : 'uil-color-grey-500 hover:uil-color-grey-900') }, link.title));
const SecondaryNav = ({ breadcrumb, internalLinkTag = 'a', links, theme, secondaryRef, }) => {
    const secondaryNavInnerRef = react_1.useRef(null);
    const [hasGradient, setHasGradient] = react_1.useState(false);
    const detectWidth = () => secondaryNavInnerRef &&
        secondaryNavInnerRef.current &&
        setHasGradient(secondaryNavInnerRef.current.scrollWidth > document.body.clientWidth);
    react_1.useEffect(() => {
        if (helpers_1.isBrowser) {
            detectWidth();
            window.addEventListener('resize', () => detectWidth());
            return () => window.removeEventListener('resize', detectWidth);
        }
        return () => { };
    }, [secondaryNavInnerRef]);
    return (react_2.jsx("div", { className: classnames_1.default('secondary-nav uil-pos-sticky uil-top-0 uil-left-0 uil-z-2 uil-d-flex uil-jc-center uil-ov-hidden', theme === 'dark' ? 'uil-bgc-grey-900' : 'uil-bgc-grey-100'), ref: secondaryRef, css: theme && Nav_css_1.default.secondaryNav(theme, hasGradient) },
        react_2.jsx("div", { className: "uil-pos-relative uil-ovy-hidden uil-w-100p uil-maw-1440 uil-m-auto uil-d-flex uil-ovx-auto uil-ws-nowrap", ref: secondaryNavInnerRef, css: Nav_css_1.default.secondaryNavInner },
            react_2.jsx("div", { className: "uil-d-flex uil-w-100p uil-ai-center uil-ph-12 uil-h-100p md:uil-ph-20" },
                react_2.jsx("ul", { className: "uil-p-0 uil-m-0 uil-mr-16 uil-d-flex uil-ai-center uil-h-auto uil-lis-none" }, breadcrumb.map((level, index) => (react_2.jsx("li", { key: `${level.title}${level.url}`, className: "uil-d-flex uil-ai-center" },
                    index !== 0 && (react_2.jsx("span", { className: "uil-h-24" },
                        react_2.jsx(react_feather_1.ChevronRight, { className: "uil-color-grey-500 uil-h-20 uil-w-auto", strokeWidth: 1 }))),
                    react_2.jsx(index_1.Text, { className: "uil-fw-bold", color: theme === 'dark' ? 'white' : 'grey' },
                        react_2.jsx(NavLink_1.default, { internalLinkTag: internalLinkTag, to: level.url, title: level.title, withUrlPrefix: false, className: "uil-color-current uil-fsz-16 lg:uil-fsz-18" }, level.title)))))),
                react_2.jsx("ul", { className: classnames_1.default('uil-lis-none uil-d-flex uil-ai-center uil-pl-16 uil-m-0 uil-h-100p uil-fxg-1', hasGradient ? 'uil-pr-80' : 'uil-pr-16') }, links.map((link) => (react_2.jsx("li", { key: `${link.title}${link.url}`, className: classnames_1.default('uil-h-100p uil-ph-8 uil-d-flex uil-ai-center', breadcrumb[breadcrumb.length - 1].url === link.url &&
                        'uil-fw-bold') },
                    react_2.jsx(NavLink_1.default, { internalLinkTag: internalLinkTag, to: link.url, title: link.title, withUrlPrefix: false, className: "uil-fsz-16 lg:uil-fsz-18" },
                        react_2.jsx(InnerLink, { theme: theme, link: link }))))))))));
};
exports.default = SecondaryNav;
//# sourceMappingURL=SecondaryNav.js.map