"use strict";
/** @jsxRuntime classic /
/** @jsx jsx */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = require("react");
const classnames_1 = __importDefault(require("classnames"));
const react_2 = require("@emotion/react");
const SubNav_data_1 = __importDefault(require("./SubNav.data"));
const NavAuth_data_1 = __importDefault(require("./NavAuth.data"));
const Nav_css_1 = __importDefault(require("./Nav.css"));
const index_1 = require("../../index");
const breakpoints = __importStar(require("../../constants/breakpoints"));
const helpers_1 = require("../../helpers");
const SubNavItem_1 = __importDefault(require("./SubNavItem"));
const getCtaHref = (url, withUrlPrefix) => withUrlPrefix ? `https://www.algolia.com${url}` : url;
const SubNav = ({ current, desktopSubNavLeftPosition, desktopSubNavTopPosition, isLoggedIn, Link, mobileOpen, mobileNavTopPosition, setCurrent, trackEvent, withUrlPrefix, }) => {
    const ref = react_1.useRef(null);
    react_1.useEffect(() => {
        if (helpers_1.isBrowser) {
            const handleClickOutside = (event) => {
                if (ref.current &&
                    !event.target.dataset.uilNavDesktopLink &&
                    !ref.current.contains(event.target)) {
                    setCurrent('');
                }
            };
            window.addEventListener('click', handleClickOutside);
            return () => window.removeEventListener('click', handleClickOutside);
        }
        return () => { };
    }, []);
    const getResponsiveWidth = (navItemTitle) => {
        if (navItemTitle === 'Products')
            return 'md:uil-miw-300 md:uil-maw-800';
        if (navItemTitle === 'Developers')
            return 'md:uil-miw-700';
        if (navItemTitle === 'Resources')
            return 'md:uil-miw-500 md:uil-ov-hidden';
        return 'md:uil-miw-300 md:uil-maw-900 lg:uil-maw-1440';
    };
    return (react_2.jsx("div", { ref: ref, className: classnames_1.default('md:uil-pe-none md:uil-v-visible md:uil-op-100p', classnames_1.default(mobileOpen ? 'uil-v-visible uil-op-100p' : 'uil-v-hidden uil-op-0')), "data-uil-subnav": true },
        react_2.jsx("div", { css: Nav_css_1.default.subNavLinks, className: "uil-pos-fixed uil-z-5 uil-bot-70 uil-left-0 uil-right-0 uil-ov-auto uil-bgc-white uil-ph-0 sm:uil-ph-16 md:uil-ov-hidden md:uil-bgc-transparent md:uil-bot-0", style: {
                top: helpers_1.isBrowser
                    ? window.matchMedia(`(min-width: ${breakpoints.MD})`).matches
                        ? `${desktopSubNavTopPosition && desktopSubNavTopPosition}px`
                        : `${mobileNavTopPosition && mobileNavTopPosition}px`
                    : 0,
            } }, SubNav_data_1.default.map((item, index) => (react_2.jsx("div", { css: [
                Nav_css_1.default.subNavItem,
                current === item.title && Nav_css_1.default.subNavItemFocused,
            ], className: classnames_1.default('uil-pe-auto uil-mb-32 md:uil-pos-absolute md:uil-bdw-0 md:uil-bgc-white md:uil-bxs-default md:uil-bdbrr-6 md:uil-bdblr-6 md:uil-mb-0', item.title !== 'Developers' &&
                'md:uil-bdtw-1 md:uil-bdc-grey-200 md:uil-bds-solid', current === item.title
                ? 'md:uil-v-visible md:uil-op-100p'
                : 'md:uil-v-hidden md:uil-op-0', getResponsiveWidth(item.title), item.title === 'Pricing' && 'md:uil-pv-16'), "data-uil-subnav-item": item.title, style: {
                left: helpers_1.isBrowser
                    ? window.matchMedia(`min-width: ${breakpoints.MD}`) && index > 0
                        ? `${desktopSubNavLeftPosition || 0}px`
                        : `${desktopSubNavLeftPosition}px`
                    : 0,
            }, key: item.title, onMouseLeave: () => {
                setCurrent('');
            } },
            react_2.jsx(SubNavItem_1.default, { item: item, Link: Link, trackEvent: trackEvent }))))),
        react_2.jsx("div", { className: "uil-bgc-grey-100 uil-bdtw-1 uil-bdw-0 uil-bdc-grey-200 uil-bds-solid uil-h-70 uil-pos-fixed uil-z-3 uil-left-0 uil-bot-0 uil-right-0 uil-d-flex uil-jc-center uil-ai-center md:uil-d-none" }, isLoggedIn ? (react_2.jsx(react_1.Fragment, null, NavAuth_data_1.default.loggedIn.map((link, index) => (react_2.jsx(index_1.Button, { key: link.title, href: getCtaHref(link.url, withUrlPrefix), className: classnames_1.default(index > 0 && 'uil-ml-12') }, link.title))))) : (react_2.jsx(react_1.Fragment, null, NavAuth_data_1.default.loggedOut.map((link, index) => (react_2.jsx(index_1.Button, { key: link.title, primary: link.primary, href: getCtaHref(link.url, withUrlPrefix), className: classnames_1.default(index > 0 && 'uil-ml-12') }, link.title))))))));
};
exports.default = SubNav;
//# sourceMappingURL=SubNav.js.map