"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const classnames_1 = __importDefault(require("classnames"));
const react_1 = require("@emotion/react");
const react_feather_1 = require("react-feather");
const index_1 = require("../../index");
const LightCta_css_1 = __importDefault(require("./LightCta.css"));
const COLORS = {
    blue: 'uil-color-nebula-500',
    green: 'uil-color-green-700',
    grey: 'uil-color-grey-800',
    orange: 'uil-color-orange-600',
    pink: 'uil-color-pink-600',
    red: 'uil-color-red-600',
    white: 'uil-color-white',
};
/** `LightCta` is a type of link component. It's got unique styling with an arrow icon and a leading tail line, though both can be disabled if so desired.
 * It's also worth mentioning that the tail has to be actively enabled if desired.

 * The `LightCta` is primarily used in place of `Button` where you'd want less emphasis, while still keeping some flair to attract attention.

 * The "tail" variation can be triggered from a parent element by applying a `data-with-tail-cta` attribute on the element.
 */
const LightCta = ({ children, color = 'blue', hoverEffect = false, tag = 'span', withArrow = true, withTail = false, ...other }) => {
    const CustomTag = other.href ? 'a' : tag;
    const { className: otherClassName, ...otherProps } = other;
    return (react_1.jsx(CustomTag, Object.assign({}, otherProps, { className: classnames_1.default(`uil-d-inline-flex uil-ai-center uil-td-none hover:uil-td-none`, COLORS[color], otherClassName), "data-with-tail-cta": withTail }),
        withTail && (react_1.jsx("span", { className: classnames_1.default('uil-mr-8 uil-fxs-0 uil-pos-relative uil-bgc-current', hoverEffect ? 'uil-w-30' : 'uil-w-20'), css: LightCta_css_1.default.tail })),
        react_1.jsx(index_1.LabelText, { color: color, className: "uil-fxs-1" }, children),
        withArrow && (react_1.jsx(react_feather_1.Play, { name: "triangle-right", className: "uil-ml-8 uil-fxs-0 uil-pos-relative", fill: "currentColor", css: LightCta_css_1.default.arrow }))));
};
LightCta.displayName = 'LightCta';
exports.default = LightCta;
//# sourceMappingURL=LightCta.js.map