"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/** @jsxRuntime classic /
/** @jsx jsx */
const react_1 = require("react");
const react_2 = require("@emotion/react");
const classnames_1 = __importDefault(require("classnames"));
const index_1 = require("../../index");
const List_css_1 = __importDefault(require("./List.css"));
const ICON_COLORS = {
    blue: 'uil-color-nebula-500',
    white: 'uil-color-white',
};
const TagWrapper = ({ item, icon, color, small, iconProps = {}, }) => {
    if (!item)
        return null;
    const Tag = item.type || 'li';
    const Icon = icon;
    const { className: iconClassName, color: iconColor = 'blue', css: iconCss, ...otherIconProps } = iconProps;
    if (Tag === 'li') {
        return (react_2.jsx(Tag, Object.assign({}, item.props, { className: classnames_1.default('uil-d-flex', item.props.className) }),
            icon && (react_2.jsx(Icon, Object.assign({}, otherIconProps, { "aria-hidden": true, className: classnames_1.default('uil-pos-relative uil-w-16 uil-h-16 uil-fxs-0 uil-mr-8 lg:uil-w-20 lg:uil-h-20', iconColor && ICON_COLORS[iconColor], iconClassName), css: [List_css_1.default.icon, iconCss] }))),
            react_2.jsx(index_1.Text, { className: "uil-m-0", color: color, small: small }, item.props.children)));
    }
    else {
        throw new Error("You can only use 'li' element.");
    }
};
/**
 * `List` is a component that aims to bring a basic design to lists
 *
 * Use `List` when you need to generate a list with or without icons before the items
 */
const List = ({ children, color, iconProps, icon, ...other }) => (react_2.jsx("div", Object.assign({}, other),
    react_2.jsx("ul", { className: classnames_1.default('uil-m-0 uil-p-0 uil-lis-none'), role: "list" }, react_1.Children.map(children, (item, index) => (react_2.jsx(index_1.ErrorBoundary, null,
        react_2.jsx(TagWrapper, { key: index, item: item, icon: icon, color: color, iconProps: iconProps })))))));
exports.default = List;
//# sourceMappingURL=List.js.map