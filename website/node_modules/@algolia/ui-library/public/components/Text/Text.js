"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const classnames_1 = __importDefault(require("classnames"));
const react_1 = require("@emotion/react");
const COLORS = {
    grey: 'uil-color-grey-700',
    white: 'uil-color-white',
};
const COLORS_SMALL = {
    grey: 'uil-color-grey-600',
    white: 'uil-color-white',
};
const LINE_HEIGHTS = {
    big: 'uil-lh-big',
    bigger: 'uil-lh-bigger',
    small: 'uil-lh-small',
};
/** `Text` is the most used component of the UI-Library. It's a wrapper for simple texts. Every paragraph is using text.
 *
 * It can be used in parent components, like `TextBlock`.
 */
const Text = ({ children, color = 'grey', lineHeight = 'bigger', small = false, tag: CustomTag = 'p', ...other }) => {
    const { className: otherClassName, ...otherProps } = other;
    return (react_1.jsx(CustomTag, Object.assign({}, otherProps, { className: classnames_1.default('uil-fw-normal uil-ff-poppins', small ? 'uil-fsz-14' : 'uil-fsz-16 lg:uil-fsz-18', LINE_HEIGHTS[lineHeight], small ? COLORS_SMALL[color] : COLORS[color], otherClassName) }), children));
};
Text.displayName = 'Text';
exports.default = Text;
//# sourceMappingURL=Text.js.map