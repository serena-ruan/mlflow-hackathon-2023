"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/** @jsxRuntime classic /
/** @jsx jsx */
const react_1 = require("react");
const react_2 = require("@emotion/react");
const classnames_1 = __importDefault(require("classnames"));
const react_feather_1 = require("react-feather");
const index_1 = require("../../index");
const BigIconLink_css_1 = __importDefault(require("./BigIconLink.css"));
const COLORS = {
    blue: 'uil-color-nebula-500',
    green: 'uil-color-green-700',
    grey: 'uil-color-grey-800',
    orange: 'uil-color-orange-600',
    pink: 'uil-color-pink-600',
    red: 'uil-color-red-600',
    white: 'uil-color-white',
};
/** `BigIconLink` is a type of link component. It's got unique styling with an arrow icon and a leading Bigger icon.
 * You can specify the icon to use with the icon prop.

 * The `BigIconLink` is primarily used in a grid display where you'd want multiples columns.
 * It uses a 100% width flex display. A container must be used to restrict the width.
 */
const BigIconLink = ({ children, color = 'blue', icon: CustomIconTag, iconProps = {}, tag: CustomTag = 'a', ...other }) => {
    const [hover, setHover] = react_1.useState(false);
    const { className: iconClassName, css: iconCss, ...otherIconProps } = iconProps;
    const { className: otherClassName, ...otherProps } = other;
    return (react_2.jsx(CustomTag, Object.assign({}, otherProps, { className: "uil-w-100p uil-d-flex uil-td-none uil-ai-center uil-jc-between uil-pv-16", onMouseOver: () => setHover(true), onMouseLeave: () => setHover(false) }),
        react_2.jsx("span", { className: otherClassName },
            CustomIconTag && (react_2.jsx(CustomIconTag, Object.assign({}, otherIconProps, { className: classnames_1.default('uil-w-30 lg:uil-w-40 uil-va-middle uil-js-start uil-mr-16 uil-pos-relative', COLORS[color], iconClassName), css: [BigIconLink_css_1.default.icon, hover && BigIconLink_css_1.default.iconUp, iconCss] }))),
            react_2.jsx(index_1.Heading3, { className: classnames_1.default(hover ? 'uil-pl-8' : 'uil-pl-0', 'uil-d-inline-block uil-va-middle uil-js-start uil-fxg-0 uil-mv-0'), css: BigIconLink_css_1.default.subtitleRoot }, children)),
        react_2.jsx("span", { css: [
                BigIconLink_css_1.default.arrowRoot,
                hover ? BigIconLink_css_1.default.arrowLeftHover : BigIconLink_css_1.default.arrowLeft,
            ] },
            react_2.jsx(react_feather_1.Play, { className: classnames_1.default('uil-mr-32 uil-w-10 uil-h-10 uil-d-block', COLORS[color]), fill: "currentColor" }))));
};
exports.default = BigIconLink;
//# sourceMappingURL=BigIconLink.js.map