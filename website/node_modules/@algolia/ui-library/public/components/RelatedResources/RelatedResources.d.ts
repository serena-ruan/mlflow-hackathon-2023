import { jsx } from '@emotion/react';
import { CardProps } from '../Card/Card';
export interface RelatedResourcesProps {
    /** The number of cards per page */
    cardsPerPage: number;
    /** The props for the Card. See Card for more details */
    cardsProps?: CardProps;
    /** A list of all the routes that aren't handled by internal routing */
    externalRoutes?: string[];
    /** Number of lines for the description  */
    descriptionLines?: number;
    /** Number of lines for the title  */
    titleLines?: number;
    /** All data to display in cards */
    data: Array<{
        /** Adds the description of a card */
        description?: string;
        /** Adds the title of a card */
        title: string;
        /** The url used for redirection */
        url: string;
        /** The url of the image */
        image: string;
        /** The ressource type 'videos' or 'docs' ( Uberflip ) or `post` (WordPress) */
        type?: string;
        /** [ Uberflip ] The stream of the data */
        stream?: {
            title: string;
        };
        /** [ WordPress ] The author of the resource */
        author?: {
            /** Author name */
            name: string;
            /** Author job title */
            job_title: string;
            /** Author avatar url */
            avatar_url: string;
        };
    }>;
    /** The url used for redirection when SeeMore is clicked */
    seeMore?: string;
}
/** `RelatedResources` is a media exposition component. It can display multiple cards. Each one with
 * a title, a description and an image. Clicking on a card redirects to a URL.
 *
 * `RelatedResources` is meant to be source agnostic. Meaning that no matter the source of the data, it will
 * properly display them.
 *
 * `RelatedResources` is primarly made to be used with GraphQL returned data
 */
declare const RelatedResources: ({ cardsPerPage, cardsProps, data, descriptionLines, titleLines, externalRoutes, seeMore, ...other }: RelatedResourcesProps) => jsx.JSX.Element;
export default RelatedResources;
