"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/** @jsxRuntime classic /
/** @jsx jsx */
const react_1 = require("react");
const classnames_1 = __importDefault(require("classnames"));
const react_2 = require("@emotion/react");
const Card_css_1 = __importDefault(require("./Card.css"));
const BORDER_RADIUSES = {
    0: 'uil-bdr-0',
    2: 'uil-bdr-2',
    4: 'uil-bdr-4',
    6: 'uil-bdr-6',
    8: 'uil-bdr-8',
    20: 'uil-bdr-20',
};
const BORDER_TOP_LEFT_RADIUSES = {
    0: 'uil-bdtlr-0',
    2: 'uil-bdtlr-2',
    4: 'uil-bdtlr-4',
    6: 'uil-bdtlr-6',
    8: 'uil-bdtlr-8',
    20: 'uil-bdtlr-20',
};
const BORDER_TOP_RIGHT_RADIUSES = {
    0: 'uil-bdtrr-0',
    2: 'uil-bdtrr-2',
    4: 'uil-bdtrr-4',
    6: 'uil-bdtrr-6',
    8: 'uil-bdtrr-8',
    20: 'uil-bdtrr-20',
};
const renderBadge = (text) => (react_2.jsx("div", { className: "uil-ta-center uil-mb-20 sm:uil-mb-0" },
    react_2.jsx(Card, { css: Card_css_1.default.badge, className: "uil-fsz-10 uil-ws-nowrap uil-tt-upper uil-lsp-big uil-lh-small uil-fw-bold uil-color-grey-700 uil-td-none hover:uil-td-none sm:uil-pos-absolute sm:uil-top-0 uil-ff-poppins", padding: "small", tag: "span" }, text)));
const getPadding = (padding) => {
    switch (padding) {
        case 'small':
            return 'uil-p-8';
        case 'normal':
            return 'uil-p-24';
        case 'large':
            return 'uil-p-48';
        case 'none':
            return false;
    }
};
/**
 * It should be used as a standalone component, recommended inside a <a href="/docs/layouts-section--basic">`Section`</a>.
 *
 * They should be easy to scan for relevant and actionable information. Images can be used to provide more context to the text.
 */
const Card = ({ badge, background = 'light', borderRadius = 2, boxShadow = 'normal', children, elevation = false, image, imageProps = {}, padding = 'normal', tag = 'div', videoProps = {}, ...other }) => {
    const CustomTag = other.href ? 'a' : tag;
    const { className: imageClassName, tag: imageTag, ...otherImageProps } = imageProps;
    const CustomImageTag = imageTag || 'img';
    const { className: otherClassName, css: otherCss, ...otherProps } = other;
    return (react_2.jsx(CustomTag, Object.assign({}, otherProps, { css: [
            Card_css_1.default.root,
            elevation &&
                (boxShadow === 'large' ? Card_css_1.default.largeElevation : Card_css_1.default.elevation),
            background === 'light' && Card_css_1.default.light,
            background === 'dark' && Card_css_1.default.dark,
            background === 'blue' && Card_css_1.default.blue,
            background === 'green' && Card_css_1.default.green,
            otherCss,
        ], className: classnames_1.default('uil-ff-poppins', BORDER_RADIUSES[borderRadius], boxShadow === 'normal' && 'uil-bxs-default', boxShadow === 'large' && 'uil-bxs-large', badge && 'uil-pos-relative', !image ? getPadding(padding) : 'uil-d-flex uil-fxd-column', otherClassName) }),
        badge && renderBadge(badge),
        image ? (react_2.jsx(react_1.Fragment, null,
            react_2.jsx(CustomImageTag, Object.assign({}, otherImageProps, { className: classnames_1.default('uil-obf-cover uil-obp-center uil-w-100p uil-h-200', BORDER_TOP_LEFT_RADIUSES[borderRadius], BORDER_TOP_RIGHT_RADIUSES[borderRadius], imageClassName), src: image })),
            react_2.jsx("div", { className: classnames_1.default(getPadding(padding), 'uil-fxg-1') }, children))) : (children)));
};
Card.displayName = 'Card';
exports.default = Card;
//# sourceMappingURL=Card.js.map