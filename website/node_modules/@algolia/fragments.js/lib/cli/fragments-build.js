#!/usr/bin/env node
"use strict";
var _fs = _interopRequireDefault(require("fs"));
var _path = _interopRequireDefault(require("path"));
var _commander = _interopRequireDefault(require("commander"));
var _ora = _interopRequireDefault(require("ora"));
var _postcss = _interopRequireDefault(require("postcss"));
var _autoprefixer = _interopRequireDefault(require("autoprefixer"));
var _cssnano = _interopRequireDefault(require("cssnano"));
var _index = _interopRequireDefault(require("../index"));
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var mkdirRecursive = function(dir) {
    if (_fs.default.existsSync(dir)) {
        return;
    }
    try {
        _fs.default.mkdirSync(dir);
    } catch (err) {
        if (err.code === "ENOENT") {
            mkdirRecursive(_path.default.dirname(dir));
            mkdirRecursive(dir);
        }
    }
};
_commander.default.parse(process.argv);
var destination = _commander.default.args.length == 0 ? "dist" : _commander.default.args[0];
var spinner = (0, _ora).default({
    text: "Building Fragments.css",
    spinner: "simpleDotsScrolling",
    color: "blue"
}).start();
(0, _postcss).default([
    _autoprefixer.default,
    _cssnano.default
]).process(_index.default, {
    from: undefined,
    to: "".concat(destination, "/fragments.css")
}).then(function(result) {
    result.warnings().map(function(warn) {
        warn && spinner.warn("Fragments has warnings.\n\n".concat(warn));
    });
    if (!_fs.default.existsSync(destination)) {
        mkdirRecursive(destination);
    }
    _fs.default.writeFile("".concat(destination, "/fragments.css"), result.css, function(err) {
        err && spinner.fail("Failed to write ".concat(destination, "/fragments.css."));
    });
    spinner.succeed("Fragments.css built successfully.");
}).catch(function(err) {
    err && spinner.fail(err);
});
